[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "text_clf_base"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8,<3.12" # for pytorch compatibility
license = "MIT"
keywords = []
authors = [{ name = "Yin Yu", email = "yxonic@gmail.com" }]
dependencies = [
  "torch",
  "tokenizers",
  "lightning",
  "torchmetrics",
  "polars",
  "tensorboard",
  "jsonargparse[signatures]",
]

[tool.hatch.version]
path = "src/text_clf_base/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "ruff",
  "python-lsp-server",
  "python-lsp-ruff",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[tool.ruff]
extend = "ruff_defaults.toml"

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:pkg_resources",
  "ignore:Deprecated call to `pkg_resources",
]

[tool.coverage.run]
source_pkgs = ["text_clf_base", "tests"]
branch = true
parallel = true
omit = ["src/text_clf_base/__about__.py"]

[tool.coverage.paths]
text_clf_base = ["src/text_clf_base", "*/text_clf_base/src/text_clf_base"]
tests = ["tests", "*/text_clf_base/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
